version: '3.9'
services:
  api1: # API - Instância 01
    build: .
    container_name: api1
    depends_on:
      - postgres
    environment:
      - SERVER_PORT=8080
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.6GB'
    networks:
      - app-network

  api2: # API - Instância 02
    build: .
    container_name: api2
    depends_on:
      - postgres
    environment:
      - SERVER_PORT=8081
    expose:
      - "8081"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.6GB'
    networks:
      - app-network

  nginx: # Load Balancer
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.3GB'
    networks:
      - app-network

  postgres: # Banco de dados
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=rinhabackend
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_USER=rinhabackend
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '1.5GB'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
